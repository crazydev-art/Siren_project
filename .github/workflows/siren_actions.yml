name: Copy PY file to Test_*.Py Check (PyTest) and Deploy Python Files

on:
  push:
    branches:
      - dev  # Trigger on pushes to the 'dev' branch

jobs:
  check-python-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all branches and commit history

      - name: Find Python Files
        id: find_py_files
        run: |
          PY_FILES=$(find . -type f -name "*.py")
          if [ -z "$PY_FILES" ]; then
            echo "No Python files found."
            echo "found_py=false" >> $GITHUB_ENV
          else
            echo "Found Python files:"
            echo "$PY_FILES"
            echo "found_py=true" >> $GITHUB_ENV
          fi

      - name: Install Dependencies
        if: env.found_py == 'true'
        run: |
          pip install --upgrade pip
          pip install pytest python-dotenv psycopg2 requests 

      - name: Create Test Files
        if: env.found_py == 'true'
        run: |
          for file in $(find . -type f -name "*.py"); do
            test_file="$(dirname "$file")/test_$(basename "$file")"
            # Avoid overwriting existing test files
            if [ ! -f "$test_file" ]; then
              cp "$file" "$test_file"
            fi
          done

      - name: Run Pytest
        if: env.found_py == 'true'
        run: |
          pytest --maxfail=1 --disable-warnings

      - name: Deploy to Prod and Main
        if: env.found_py == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "lionel.matter@outlook.fr"

          # Deploy to main branch
          git checkout main
          git pull origin main
          git checkout dev -- .
          if git diff-index --quiet HEAD --; then
            echo "No changes to deploy to main."
          else
            git commit -am "Deploying Python files from dev to main"
            git push origin main
          fi

          # Deploy to prod branch
          git checkout prod
          git pull origin prod
          git checkout dev -- .
          if git diff-index --quiet HEAD --; then
            echo "No changes to deploy to prod."
          else
            git commit -am "Deploying Python files from dev to prod"
            git push origin prod
          fi

      - name: Log No Python Files
        if: env.found_py == 'false'
        run: echo "No Python files found in this push."